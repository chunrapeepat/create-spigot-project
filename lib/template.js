"use strict";

function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

const pluginYML = (name, version, packages, author, commands) => {
  let _commands = ''
  for(let i = 0; i < commands.length; i++){
    _commands += `    ${commands[i]}:
        usage: /<command>
        description: 'Your command description goes here'\n`
  }
  return `name: ${name}
version: ${version}
main: ${packages.join('.')}.${name}
author: ${author}
commands:
${_commands}`
}

const JavaPlugin = (name, packages, commands, config) => {
  let _commands = ''
  for(let i = 0; i < commands.length; i++){
    _commands += `    getCommand("${commands[i]}").setExecutor(new ${capitalizeFirstLetter(commands[i])}Command());\n`
  }
  return `package ${packages.join('.')};

import org.bukkit.Bukkit;
import org.bukkit.plugin.java.JavaPlugin;
import ${packages.join('.')}.commands.*;
import org.bukkit.event.Listener;

public class ${name} extends JavaPlugin {

  public static ${name} instance;

  @Override
  public void onEnable(){

    instance = this;

    //load configuration file
    ${(config) ? '//' : ''}this.loadConfigurationFile();

    //register commands
${_commands}

    Bukkit.getLogger().info("GENERATED BY CHUN RAPEEPAT");

  }

  //TODO this is a private methods zone

  private void loadConfigurationFile(){
    saveDefaultConfig();
  }

  private void loadListeners(Listener... listeners){
    for(Listener lis : listeners){
      Bukkit.getPluginManager().registerEvents(lis, this);
    }
  }

  //TODO this is a public methods zone

  public static ${name} getInstance(){
    return instance;
  }

}
  `
}

const Command = (name, packages, command) => {
  return `package ${packages.join('.')}.commands;

import ${packages.join('.')}.${name};

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

public class ${capitalizeFirstLetter(command)}Command implements CommandExecutor {

	${name} instance;

	public ${capitalizeFirstLetter(command)}Command(){
		instance = ${name}.getInstance();
	}

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {

		if(sender instanceof Player){
			if(!sender.isOp()){
				sender.sendMessage(ChatColor.DARK_RED + "You have no permission to access this command!");
				return true;
			}
		}

		return true;
	}

}`
}

exports.pluginYML = pluginYML;
exports.JavaPlugin = JavaPlugin;
exports.Command = Command;
